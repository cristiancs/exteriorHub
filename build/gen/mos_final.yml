name: example-arduino-onewire-js-1.13
type: app
version: "1.0"
arch: esp8266
author: mongoose-os
description: Arduino OneWire API usage example (JavaScript)
mongoose_os_version: "1.13"
sources:
- local_libs/arduino-compat-1.13/src
- local_libs/onewire-1.13/src
- local_libs/arduino-onewire-1.13/src
- local_libs/wifi-1.13/src
- local_libs/wifi-1.13/esp8266/src
- local_libs/http-server-1.13/src
- local_libs/i2c-1.13/src
- local_libs/i2c-1.13/src/common_gpio
- local_libs/mjs-1.13/src
- ${mjs_path}/mjs.c
- local_libs/mjs-1.13/esp8266/src
- local_libs/mqtt-1.13/src
- local_libs/ota-http-client-1.13/src
- local_libs/ota-http-server-1.13/src
- local_libs/rpc-common-1.13/src/mg_rpc
- local_libs/rpc-common-1.13/src
- local_libs/rpc-mqtt-1.13/src
- local_libs/rpc-service-config-1.13/src
- local_libs/rpc-service-fs-1.13/src
- local_libs/rpc-service-gpio-1.13/src
- local_libs/rpc-service-ota-1.13/src
- local_libs/rpc-uart-1.13/src
- local_libs/spi-1.13/src
- local_libs/spi-1.13/src/common_gpio
- src
filesystem:
- local_libs/onewire-1.13/fs
- local_libs/mjs-1.13/fs
- ${mjs_path}/mjs/lib/api_*.js
- ${mongoose_os_path}/fw/mjs_api/api_*.js
- ${mongoose_os_path}/fw/platforms/${arch}/mjs_api/api_*.js
- local_libs/arduino-compat-1.13/mjs_fs
- local_libs/onewire-1.13/mjs_fs
- local_libs/arduino-onewire-1.13/mjs_fs
- local_libs/wifi-1.13/mjs_fs
- local_libs/http-server-1.13/mjs_fs
- local_libs/i2c-1.13/mjs_fs
- local_libs/mjs-1.13/mjs_fs
- local_libs/mqtt-1.13/mjs_fs
- local_libs/ota-http-client-1.13/mjs_fs
- local_libs/ota-http-server-1.13/mjs_fs
- local_libs/rpc-common-1.13/mjs_fs
- local_libs/rpc-mqtt-1.13/mjs_fs
- local_libs/rpc-service-config-1.13/mjs_fs
- local_libs/rpc-service-fs-1.13/mjs_fs
- local_libs/rpc-service-gpio-1.13/mjs_fs
- local_libs/rpc-service-ota-1.13/mjs_fs
- local_libs/rpc-uart-1.13/mjs_fs
- local_libs/spi-1.13/mjs_fs
- local_libs/mjs-1.13/esp8266/fs
- fs
binary_libs: []
extra_files: []
ffi_symbols: []
modules:
- origin: https://github.com/cesanta/mjs
config_schema:
- - wifi
  - o
  - hide: true
- - wifi.sta
  - o
  - title: WiFi Station
- - wifi.sta.enable
  - b
  - title: Connect to existing WiFi
- - wifi.sta.ssid
  - s
  - title: SSID
- - wifi.sta.pass
  - s
  - title: Password
    type: password
- - wifi.sta.user
  - s
  - title: Username for WPA-PEAP mode
- - wifi.sta.anon_identity
  - s
  - title: Anonymous identity for WPA mode
- - wifi.sta.cert
  - s
  - title: Client certificate for WPA-TTLS mode
- - wifi.sta.key
  - s
  - title: Client key for WPA-TTLS mode
- - wifi.sta.ca_cert
  - s
  - title: CA certificate for WPA-enterprise mode
- - wifi.sta.ip
  - s
  - title: Static IP Address
- - wifi.sta.netmask
  - s
  - title: Static Netmask
- - wifi.sta.gw
  - s
  - title: Static Default Gateway
- - wifi.sta.nameserver
  - s
  - title: DNS Server
- - wifi.sta.dhcp_hostname
  - s
  - title: Host name to include in DHCP requests
- - wifi.ap
  - o
  - title: WiFi Access Point
- - wifi.ap.enable
  - b
  - true
  - title: Enable
- - wifi.ap.ssid
  - s
  - Mongoose_??????
  - title: SSID
- - wifi.ap.pass
  - s
  - Mongoose
  - title: Password
    type: password
- - wifi.ap.hidden
  - b
  - false
  - title: Hide SSID
- - wifi.ap.channel
  - i
  - 6
  - title: Channel
- - wifi.ap.max_connections
  - i
  - 10
  - title: Max connections
- - wifi.ap.ip
  - s
  - 192.168.4.1
  - title: IP address
- - wifi.ap.netmask
  - s
  - 255.255.255.0
  - title: Network Mask
- - wifi.ap.gw
  - s
  - 192.168.4.1
  - title: Default Gateway
- - wifi.ap.dhcp_start
  - s
  - 192.168.4.2
  - title: DHCP Start Address
- - wifi.ap.dhcp_end
  - s
  - 192.168.4.100
  - title: DHCP End Address
- - wifi.ap.trigger_on_gpio
  - i
  - -1
  - title: Trigger AP on low GPIO
- - wifi.ap.keep_enabled
  - b
  - true
  - title: Keep AP enabled when station is on
- - http
  - o
  - title: HTTP Server
- - http.enable
  - b
  - true
  - title: Enable HTTP Server
- - http.listen_addr
  - s
  - "80"
  - title: Listening port / address
- - http.document_root
  - s
  - /
  - title: Root for serving files. Setting to empty disables file serving.
- - http.ssl_cert
  - s
  - title: Turn on SSL on the listener, use this cert
- - http.ssl_key
  - s
  - title: SSL key to use
- - http.ssl_ca_cert
  - s
  - title: Verify clients this CA bundle
- - http.upload_acl
  - s
  - '*'
  - title: Upload file ACL
- - http.hidden_files
  - s
  - title: Hidden file pattern
- - http.auth_domain
  - s
  - title: Enable authentication of all HTTP requests
- - http.auth_file
  - s
  - title: Password file to use for auth
- - i2c
  - o
  - title: I2C settings
- - i2c.enable
  - b
  - false
  - title: Enable I2C
- - i2c.freq
  - i
  - 100000
  - title: Clock frequency
- - i2c.debug
  - b
  - false
  - title: Debug I2C bus activity
- - i2c.sda_gpio
  - i
  - 0
  - title: GPIO to use for SDA
- - i2c.scl_gpio
  - i
  - 0
  - title: GPIO to use for SCL
- - i2c.sda_gpio
  - 12
- - i2c.scl_gpio
  - 14
- - mjs
  - o
  - title: mJS settings
- - mjs.generate_jsc
  - b
  - true
  - title: Generate .jsc file when executing any .js file
- - mqtt
  - o
  - title: MQTT settings
- - mqtt.enable
  - b
  - false
  - title: Enable MQTT
- - mqtt.server
  - s
  - iot.eclipse.org:1883
  - title: MQTT server
- - mqtt.client_id
  - s
  - ""
  - title: ClientID t send to the broker. Defaults to device.id.
- - mqtt.user
  - s
  - ""
  - title: User name
- - mqtt.pass
  - s
  - ""
  - title: Password
- - mqtt.reconnect_timeout_min
  - d
  - 2
  - title: Starting reconnect timeout
- - mqtt.reconnect_timeout_max
  - d
  - 60
  - title: Maximum reconnect timeout
- - mqtt.ssl_cert
  - s
  - ""
  - title: Client certificate to present to the server
- - mqtt.ssl_key
  - s
  - ""
  - title: Private key corresponding to the certificate
- - mqtt.ssl_ca_cert
  - s
  - ""
  - title: Verify server certificate using this CA bundle
- - mqtt.ssl_cipher_suites
  - s
  - ""
  - title: Cipher suites to offer to the server
- - mqtt.ssl_psk_identity
  - s
  - ""
  - title: PSK identity (must specify PSK cipher suites)
- - mqtt.ssl_psk_key
  - s
  - ""
  - title: PSK key
- - mqtt.clean_session
  - b
  - true
  - title: Clean Session
- - mqtt.keep_alive
  - i
  - 60
  - title: Keep alive interval
- - mqtt.will_topic
  - s
  - ""
  - title: Will topic
- - mqtt.will_message
  - s
  - ""
  - title: Will message
- - debug.stdout_topic
  - s
  - ""
  - title: MQTT topic to publish STDOUT to
- - debug.stderr_topic
  - s
  - ""
  - title: MQTT topic to publish STDERR to
- - update.url
  - s
  - title: Fetch updates form here
- - update.interval
  - i
  - title: Check for updates this often
- - update.ssl_ca_file
  - s
  - ca.pem
  - title: TLS CA file
- - update.ssl_client_cert_file
  - s
  - title: TLS client cert file
- - update.ssl_server_name
  - s
  - title: TLS Server Name
- - update.enable_post
  - b
  - true
  - title: Enable POST updates
- - rpc
  - o
  - title: RPC settings
- - rpc.enable
  - b
  - true
  - title: Enable RPC
- - rpc.max_frame_size
  - i
  - 4096
  - title: Max Frame Size
- - rpc.max_queue_length
  - i
  - 25
  - title: Max Queue Length
- - rpc.default_out_channel_idle_close_timeout
  - i
  - 10
  - title: Default idle close timeout for outbound channels
- - rpc.ws
  - o
  - title: RPC over WebSocket settings
- - rpc.ws.enable
  - b
  - true
  - title: Enable RPC over WebSocket
- - rpc.ws.server_address
  - s
  - ""
  - title: Cloud server address
- - rpc.ws.reconnect_interval_min
  - i
  - 1
  - title: Minimal reconnect interval
- - rpc.ws.reconnect_interval_max
  - i
  - 60
  - title: Maximal reconnect interval
- - rpc.ws.ssl_server_name
  - s
  - title: TLS Server Name
- - rpc.ws.ssl_ca_file
  - s
  - title: TLS CA file
- - rpc.ws.ssl_client_cert_file
  - s
  - title: TLS client cert file
- - rpc.mqtt
  - o
  - title: RPC over MQTT settings
- - rpc.mqtt.enable
  - b
  - true
  - title: Enable RPC over MQTT
- - rpc.mqtt.topic
  - s
  - ""
  - title: Topic to use for RPC requests and responses. The default is ${device.id}/rpc
- - rpc.mqtt.is_trusted
  - b
  - true
  - title: Whether this channel can be used for privileged commands, such as changing
      configuration
- - rpc.uart
  - o
  - title: RPC-over-UART settings
- - rpc.uart.uart_no
  - i
  - title: UART number (-1 to disable)
- - rpc.uart.baud_rate
  - i
  - 115200
  - title: Baud rate
- - rpc.uart.fc_type
  - i
  - 2
  - title: 'Flow control: 0 - none, 1 - CTS/RTS, 2 - XON/XOFF'
- - rpc.uart.wait_for_start_frame
  - b
  - true
  - title: Wait for an incoming frame before using the channel
- - spi
  - o
  - title: SPI settings
- - spi.enable
  - b
  - false
  - title: Enable SPI
- - spi.debug
  - b
  - false
  - title: Debug SPI bus activity
- - spi.miso_gpio
  - i
  - -1
  - title: GPIO to use for MISO
- - spi.mosi_gpio
  - i
  - -1
  - title: GPIO to use for MOSI
- - spi.sclk_gpio
  - i
  - -1
  - title: GPIO to use for SCLK
- - spi.cs0_gpio
  - i
  - -1
  - title: GPIO to use for CS0
- - spi.cs1_gpio
  - i
  - -1
  - title: GPIO to use for CS1
- - spi.cs2_gpio
  - i
  - -1
  - title: GPIO to use for CS2
- - spi.miso_gpio
  - 12
- - spi.mosi_gpio
  - 13
- - spi.sclk_gpio
  - 14
- - spi.cs0_gpio
  - 5
build_vars:
  MGOS_ENABLE_I2C_GPIO: "1"
  MGOS_ENABLE_SPI_GPIO: "1"
  MGOS_ENABLE_UPDATER: "1"
  MGOS_HAVE_ARDUINO_COMPAT: "1"
  MGOS_HAVE_ARDUINO_ONEWIRE: "1"
  MGOS_HAVE_HTTP_SERVER: "1"
  MGOS_HAVE_I2C: "1"
  MGOS_HAVE_MJS: "1"
  MGOS_HAVE_MQTT: "1"
  MGOS_HAVE_ONEWIRE: "1"
  MGOS_HAVE_OTA_HTTP_CLIENT: "1"
  MGOS_HAVE_OTA_HTTP_SERVER: "1"
  MGOS_HAVE_RPC_COMMON: "1"
  MGOS_HAVE_RPC_MQTT: "1"
  MGOS_HAVE_RPC_SERVICE_CONFIG: "1"
  MGOS_HAVE_RPC_SERVICE_FS: "1"
  MGOS_HAVE_RPC_SERVICE_GPIO: "1"
  MGOS_HAVE_RPC_SERVICE_OTA: "1"
  MGOS_HAVE_RPC_UART: "1"
  MGOS_HAVE_SPI: "1"
  MGOS_HAVE_WIFI: "1"
  MGOS_WIFI_ENABLE_AP_STA: "1"
cflags: []
cxxflags: []
cdefs:
  ARDUINO: "150"
  ESP8266: "1"
  F_CPU: "160000000"
  MG_ENABLE_MQTT: "1"
  MGOS_ENABLE_FILE_UPLOAD: "1"
  MGOS_ENABLE_RPC_CHANNEL_HTTP: "1"
  MGOS_ENABLE_RPC_CHANNEL_WS: "1"
  MGOS_ENABLE_SYS_SERVICE: "1"
  MGOS_ENABLE_TUNNEL: "0"
  MGOS_ENABLE_WEB_CONFIG: "0"
  MGOS_HAVE_ARDUINO_COMPAT: "1"
  MGOS_HAVE_ARDUINO_ONEWIRE: "1"
  MGOS_HAVE_HTTP_SERVER: "1"
  MGOS_HAVE_I2C: "1"
  MGOS_HAVE_MJS: "1"
  MGOS_HAVE_MQTT: "1"
  MGOS_HAVE_ONEWIRE: "1"
  MGOS_HAVE_OTA_HTTP_CLIENT: "1"
  MGOS_HAVE_OTA_HTTP_SERVER: "1"
  MGOS_HAVE_RPC_COMMON: "1"
  MGOS_HAVE_RPC_MQTT: "1"
  MGOS_HAVE_RPC_SERVICE_CONFIG: "1"
  MGOS_HAVE_RPC_SERVICE_FS: "1"
  MGOS_HAVE_RPC_SERVICE_GPIO: "1"
  MGOS_HAVE_RPC_SERVICE_OTA: "1"
  MGOS_HAVE_RPC_UART: "1"
  MGOS_HAVE_SPI: "1"
  MGOS_HAVE_WIFI: "1"
  MGOS_WIFI_ENABLE_AP_STA: "1"
tags:
- js
- arduino-core
- arduino
- hw
libs_version: "1.13"
modules_version: "1.13"
conds: []
manifest_version: 2017-05-18
skeleton_version: 2017-05-18
deps: []
libs_handled:
- name: arduino-compat
  path: local_libs/arduino-compat-1.13
  deps: []
- name: onewire
  path: local_libs/onewire-1.13
  deps: []
- name: arduino-onewire
  path: local_libs/arduino-onewire-1.13
  deps:
  - arduino-compat
  - onewire
- name: wifi
  path: local_libs/wifi-1.13
  deps: []
- name: http-server
  path: local_libs/http-server-1.13
  deps:
  - atca
  - ethernet
  - wifi
- name: i2c
  path: local_libs/i2c-1.13
  deps: []
- name: mjs
  path: local_libs/mjs-1.13
  deps: []
- name: mqtt
  path: local_libs/mqtt-1.13
  deps: []
- name: ota-http-client
  path: local_libs/ota-http-client-1.13
  deps: []
- name: ota-http-server
  path: local_libs/ota-http-server-1.13
  deps:
  - http-server
  - ota-http-client
- name: rpc-common
  path: local_libs/rpc-common-1.13
  deps:
  - http-server
- name: rpc-mqtt
  path: local_libs/rpc-mqtt-1.13
  deps:
  - mqtt
  - rpc-common
- name: rpc-service-config
  path: local_libs/rpc-service-config-1.13
  deps:
  - rpc-common
- name: rpc-service-fs
  path: local_libs/rpc-service-fs-1.13
  deps:
  - rpc-common
- name: rpc-service-gpio
  path: local_libs/rpc-service-gpio-1.13
  deps:
  - rpc-common
- name: rpc-service-ota
  path: local_libs/rpc-service-ota-1.13
  deps:
  - ota-http-client
  - rpc-common
- name: rpc-uart
  path: local_libs/rpc-uart-1.13
  deps:
  - rpc-common
- name: spi
  path: local_libs/spi-1.13
  deps: []
